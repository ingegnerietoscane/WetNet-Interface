<beans:beans xmlns="http://www.springframework.org/schema/security" xmlns:beans="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
    xsi:schemaLocation="http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
		http://www.springframework.org/schema/security
		http://www.springframework.org/schema/security/spring-security-3.2.xsd
		http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context-3.1.xsd">
		
		
    <beans:bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <beans:property name="ignoreUnresolvablePlaceholders" value="true" />
        <beans:property name="ignoreResourceNotFound" value="true" />
        <beans:property name="locations">
            <beans:list>
                <beans:value>classpath:web.properties</beans:value>
                <beans:value>classpath*:wetnet-configuration.properties</beans:value>
            </beans:list>
        </beans:property>
    </beans:bean>
    
    <context:annotation-config />
	
	<global-method-security  pre-post-annotations="enabled"/>
	
    <http pattern="/css/**" security="none" />
    <http pattern="/scripts/**" security="none" />
    <http pattern="/images/**" security="none" />
    <http pattern="/assets/**" security="none" />
    <http pattern="/wetnet/app/**" security="none" />

    <http auto-config="true" access-denied-page="/wetnet/denied" disable-url-rewriting="true" use-expressions="true" >
        
        <form-login  login-page="/wetnet/login" authentication-failure-url="/wetnet/loginfailed" default-target-url="/wetnet/welcome" always-use-default-target="true" />
        
        <!-- 
        Per abilitare HTTPS - aggiungere configurazione in tomcat porta 8443 e requires-channel="https"	-->
        <intercept-url pattern="/wetnet/welcome" requires-channel="https" access="hasAnyRole({'ROLE_USER', 'ROLE_OPERATOR', 'ROLE_SUPERVISOR','ROLE_ADMINISTRATOR','ROLE_METER_READER'})" />
		
		 
<!--  		<intercept-url pattern="/wetnet/welcome" access="hasAnyRole({'ROLE_USER', 'ROLE_OPERATOR', 'ROLE_SUPERVISOR','ROLE_ADMINISTRATOR','ROLE_METER_READER'})" />  -->
		
		
        <logout invalidate-session="false" delete-cookies="JSESSIONID" logout-success-url="/wetnet/logout" />

        <session-management invalid-session-url="/wetnet/login" />

    </http>
    

    <!-- Authentication -->
    <authentication-manager>
        <authentication-provider ref="authenticationProvider">
        </authentication-provider>
    </authentication-manager>
    
    <beans:bean id="userDetailsService" class="net.wedjaa.wetnet.security.UserDetailsServiceImpl"/>
    
    <beans:bean id="authenticationProvider" class="org.springframework.security.authentication.dao.DaoAuthenticationProvider">
    	<beans:property name="userDetailsService" ref="userDetailsService"/>
    	<beans:property name="passwordEncoder" ref="passwordEncoder"/>
    </beans:bean>
    
    <beans:bean id="passwordEncoder" class="org.springframework.security.authentication.encoding.MessageDigestPasswordEncoder">
        <beans:constructor-arg value="MD5" />
    </beans:bean>
    

</beans:beans>